{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Applicationtype } from 'src/app/data/applicationtype';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/product-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../Services/userservices.service\";\nconst _c0 = function () {\n  return [\"/displayapplication\"];\n};\nexport class CreateapplicationComponent {\n  constructor(ProductServiceService, router, route, formBuilder, UserserviceService) {\n    this.ProductServiceService = ProductServiceService;\n    this.router = router;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.UserserviceService = UserserviceService;\n    this.applicationname = \"\";\n    this.id = 0;\n    if (!UserserviceService.getuserloginstatus() && !UserserviceService.isadmin) {\n      router.navigate(['/Login']);\n    }\n    this.route.paramMap.subscribe(params => {\n      this.id = Number(params.get('id'));\n    });\n    if (this.id !== 0) {\n      this.application = this.ProductServiceService.getapplicatiobyId(this.id);\n      if (this.application !== undefined) {\n        this.applicationname = this.application.ApplicationName;\n      }\n    }\n  }\n  ngOnInit() {\n    this.applicationForm = this.formBuilder.group({\n      name: [this.applicationname, Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.applicationForm.valid) {\n      console.log(this.applicationForm.controls['name'].value);\n      if (this.id !== 0) {\n        this.ProductServiceService.addapplications(new Applicationtype(this.id, this.applicationForm.controls['name'].value));\n        this.router.navigate(['/displayapplication']);\n      } else {\n        this.ProductServiceService.addapplications(new Applicationtype(0, this.applicationForm.controls['name'].value));\n        this.router.navigate(['/displayapplication']);\n      }\n    }\n  }\n}\nCreateapplicationComponent.ɵfac = function CreateapplicationComponent_Factory(t) {\n  return new (t || CreateapplicationComponent)(i0.ɵɵdirectiveInject(i1.ProductServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.UserserviceService));\n};\nCreateapplicationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateapplicationComponent,\n  selectors: [[\"app-createapplication\"]],\n  decls: 28,\n  vars: 4,\n  consts: [[1, \"container\", \"border-5\", \"bg-gradient\"], [1, \"container\", \"p-5\", \"m-3\", \"border-dark\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"border\", \"p-3\"], [1, \"form-group\", \"row\"], [1, \"text-info\", \"pl-3\"], [1, \"row\"], [1, \"col-8\"], [1, \"col-4\"], [\"for\", \"Name\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [1, \"col-8\", \"offset-4\", \"row\"], [1, \"col\"], [\"type\", \"submit\", \"value\", \"Create\", 1, \"btn\", \"btn-info\", \"w-100\", 3, \"disabled\"], [1, \"btn\", \"btn-success\", \"w-100\", 3, \"routerLink\"], [1, \"fas\", \"fa-sign-out-alt\"]],\n  template: function CreateapplicationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateapplicationComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n      i0.ɵɵtext(6, \"Create Category\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 4)(11, \"div\", 8)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 7);\n      i0.ɵɵelement(15, \"input\", 10)(16, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"div\", 4);\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 11)(21, \"div\", 12);\n      i0.ɵɵelement(22, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 12)(24, \"a\", 14);\n      i0.ɵɵelement(25, \"i\", 15);\n      i0.ɵɵtext(26, \" Back \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(27, \"div\", 8);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.applicationForm);\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"disabled\", ctx.applicationForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Applicationtype","CreateapplicationComponent","constructor","ProductServiceService","router","route","formBuilder","UserserviceService","getuserloginstatus","isadmin","navigate","paramMap","subscribe","params","id","Number","get","application","getapplicatiobyId","undefined","applicationname","ApplicationName","ngOnInit","applicationForm","group","name","required","onSubmit","valid","console","log","controls","value","addapplications","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\admin\\createapplication\\createapplication.component.ts","C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\admin\\createapplication\\createapplication.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Applicationtype } from 'src/app/data/applicationtype';\nimport { ProductServiceService } from 'src/app/Services/product-service.service';\nimport { User } from 'src/data/user';\nimport { UserserviceService } from '../../Services/userservices.service';\n@Component({\n  selector: 'app-createapplication',\n  templateUrl: './createapplication.component.html',\n  styleUrls: ['./createapplication.component.css']\n})\nexport class CreateapplicationComponent {\n  public applicationForm:any;\n  public applicationname?: string=\"\";\n  public application?:Applicationtype | undefined;\n  public id:number=0;\n\n  constructor(private ProductServiceService:ProductServiceService,public router:Router,public route:ActivatedRoute,private formBuilder: FormBuilder,public UserserviceService:UserserviceService){\n    if(!UserserviceService.getuserloginstatus() && !UserserviceService.isadmin){\n      router.navigate(['/Login']);\n    }  \n    this.route.paramMap.subscribe(params =>{\n      this.id=Number( params.get('id'));\n    })\n      if(this.id!==0){\n      this.application=this.ProductServiceService.getapplicatiobyId(this.id);\n      if(this.application!==undefined){\n        this.applicationname=this.application.ApplicationName;\n      }\n    }\n  }\n  ngOnInit(): void {\n    \n    this.applicationForm = this.formBuilder.group({\n      name: [this.applicationname, Validators.required]\n    });\n  }\n  onSubmit() {\n \n    if (this.applicationForm.valid) {\n      console.log(this.applicationForm.controls['name'].value);\n      if(this.id!==0){\n      this.ProductServiceService.addapplications(new Applicationtype(this.id,this.applicationForm.controls['name'].value))\n        this.router.navigate(['/displayapplication'])\n    }\n    else{\n      this.ProductServiceService.addapplications(new Applicationtype(0,this.applicationForm.controls['name'].value))\n      this.router.navigate(['/displayapplication'])\n    }\n  }\n\n\n}\n\n}\n","<div class=\"container border-5 bg-gradient\">\n    <div class=\"container p-5 m-3 border-dark\">\n      <form [formGroup]=\"applicationForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"border p-3\">\n          <div class=\"form-group row\">\n            <h2 class=\"text-info pl-3\">Create Category</h2>\n          </div>\n          <br>\n          <div class=\"row\">\n            <div class=\"col-8\">\n              <div class=\"form-group row\">\n                <div class=\"col-4\">\n                  <label for=\"Name\">Name</label>\n                </div>\n                <div class=\"col-8\">\n                  <input class=\"form-control\" type=\"text\" formControlName=\"name\" />\n                  <br>\n                </div>\n                <br />\n              </div>\n              <div class=\"form-group row\">\n              </div>\n              <div class=\"form-group row\">\n                <div class=\"col-8 offset-4 row\">\n                  <div class=\"col\">\n                    <input type=\"submit\" class=\"btn btn-info w-100\" value=\"Create\" [disabled]=\"applicationForm.invalid\" />\n                  </div>\n                  <div class=\"col\">\n                    <a class=\"btn btn-success w-100\" [routerLink]=\"['/displayapplication']\">\n                      <i class=\"fas fa-sign-out-alt\"></i> Back\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-4\"></div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}