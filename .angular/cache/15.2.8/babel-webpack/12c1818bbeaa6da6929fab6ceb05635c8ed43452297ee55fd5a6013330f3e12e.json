{"ast":null,"code":"import { User } from 'src/data/user';\nimport * as i0 from \"@angular/core\";\nexport class UserserviceService {\n  constructor() {\n    this.users = [];\n    this.show = true;\n    this.userlogin = false;\n    this.users = [new User('sahil Jain', 'sahil@gmail.com', '1234567898', 'sahil')];\n  }\n  getUData() {\n    return this.users;\n  }\n  addUser(newuser) {\n    if (newuser != undefined) {\n      this.users.push(newuser);\n      return true;\n    }\n    return false;\n  }\n  getUser(username) {\n    let usr = this.users.find(each => each.username == username);\n    return usr;\n  }\n  getshowstatus() {\n    return this.show;\n  }\n  updateshowstatus(value) {\n    this.show = value;\n  }\n  updatelofingstatus(value) {\n    this.userlogin = value;\n    console.log(this.userlogin);\n    return this.userlogin;\n  }\n  getuserloginstatus() {\n    return this.userlogin;\n  }\n}\nUserserviceService.ɵfac = function UserserviceService_Factory(t) {\n  return new (t || UserserviceService)();\n};\nUserserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserserviceService,\n  factory: UserserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,eAAe;;AAKpC,OAAM,MAAOC,kBAAkB;EAK7BC;IAJQ,UAAK,GAAW,EAAE;IACnB,SAAI,GAAY,IAAI;IACpB,cAAS,GAAY,KAAK;IAG/B,IAAI,CAACC,KAAK,GAAG,CACX,IAAIH,IAAI,CAAE,YAAY,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,CAAC,CAClE;EACH;EAEAI,QAAQ;IACN,OAAO,IAAI,CAACD,KAAK;EACnB;EAEAE,OAAO,CAACC,OAAa;IACnB,IAAIA,OAAO,IAAIC,SAAS,EAAE;MACxB,IAAI,CAACJ,KAAK,CAACK,IAAI,CAACF,OAAO,CAAC;MACxB,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEAG,OAAO,CAACC,QAAgB;IACtB,IAAIC,GAAG,GAAG,IAAI,CAACR,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,QAAQ,IAAIA,QAAQ,CAAC;IAC5D,OAAOC,GAAG;EACZ;EAEAG,aAAa;IACX,OAAO,IAAI,CAACC,IAAI;EAClB;EAEAC,gBAAgB,CAACC,KAAc;IAC7B,IAAI,CAACF,IAAI,GAAGE,KAAK;EACnB;EAEAC,kBAAkB,CAACD,KAAc;IAC/B,IAAI,CAACE,SAAS,GAAGF,KAAK;IACtBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC;IAC3B,OAAO,IAAI,CAACA,SAAS;EACvB;EAEAG,kBAAkB;IAChB,OAAO,IAAI,CAACH,SAAS;EACvB;;AA5CWlB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAsB,SAAlBtB,kBAAkB;EAAAuB,YAFjB;AAAM","names":["User","UserserviceService","constructor","users","getUData","addUser","newuser","undefined","push","getUser","username","usr","find","each","getshowstatus","show","updateshowstatus","value","updatelofingstatus","userlogin","console","log","getuserloginstatus","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\158590\\Downloads\\E-Marble_Inquiry\\src\\app\\Services\\userservices.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from 'src/data/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserserviceService {\n  private users: User[] = [];\n  public show: boolean = true;\n  public userlogin: boolean = false;\n\n  constructor() { \n    this.users = [\n      new User( 'sahil Jain', 'sahil@gmail.com', '1234567898', 'sahil')\n    ];\n  }\n\n  getUData(): User[] {\n    return this.users;\n  }\n\n  addUser(newuser: User): boolean {\n    if (newuser != undefined) {\n      this.users.push(newuser);\n      return true;\n    }\n    return false;\n  }\n\n  getUser(username: string): User | undefined {\n    let usr = this.users.find(each => each.username == username);\n    return usr;\n  }\n\n  getshowstatus(): boolean {\n    return this.show;\n  }\n\n  updateshowstatus(value: boolean) {\n    this.show = value;\n  }\n\n  updatelofingstatus(value: boolean): boolean {\n    this.userlogin = value;\n    console.log(this.userlogin);\n    return this.userlogin;\n  }\n\n  getuserloginstatus(): boolean {\n    return this.userlogin;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}