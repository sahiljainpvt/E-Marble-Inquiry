{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/product-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../Services/userservices.service\";\nconst _c0 = function () {\n  return [\"manage-inquiry\"];\n};\nexport class UpdateInquirystatusComponent {\n  // Add the \"!\" operator to indicate that the property will be initialized\n  constructor(formBuilder, ProductServiceService, router, route, UserserviceService) {\n    this.formBuilder = formBuilder;\n    this.ProductServiceService = ProductServiceService;\n    this.router = router;\n    this.route = route;\n    this.UserserviceService = UserserviceService;\n    this.id = 0;\n    if (!UserserviceService.getuserloginstatus() && !UserserviceService.isadmin) {\n      router.navigate(['/Login']);\n    }\n    this.route.paramMap.subscribe(params => {\n      this.id = Number(params.get('id'));\n    });\n  }\n  ngOnInit() {\n    this.inquiryForm = this.formBuilder.group({\n      status: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.inquiryForm.valid) {\n      this.ProductServiceService.updateinquirystatus(this.id, this.inquiryForm.controls['status'].value);\n      this.router.navigate(['/manage-inquiry']);\n    }\n  }\n}\nUpdateInquirystatusComponent.ɵfac = function UpdateInquirystatusComponent_Factory(t) {\n  return new (t || UpdateInquirystatusComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductServiceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.UserserviceService));\n};\nUpdateInquirystatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateInquirystatusComponent,\n  selectors: [[\"app-update-inquirystatus\"]],\n  decls: 33,\n  vars: 3,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"border\", \"p-3\"], [1, \"form-group\", \"row\"], [1, \"text-info\", \"pl-3\"], [1, \"row\"], [1, \"col-8\"], [1, \"col-4\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\", 1, \"form-control\"], [\"disabled\", \"\", \"selected\", \"\"], [\"value\", \"In Process\"], [\"value\", \"Completed\"], [\"value\", \"Unable to Reach\"], [\"data-valmsg-for\", \"Name\", \"data-valmsg-replace\", \"true\", 1, \"text-danger\", \"field-validation-valid\"], [1, \"col-8\", \"offset-4\", \"row\"], [1, \"col\"], [\"type\", \"submit\", \"value\", \"Update\", 1, \"btn\", \"btn-info\", \"w-100\"], [1, \"btn\", \"btn-success\", \"w-100\", 3, \"routerLink\"], [1, \"fas\", \"fa-sign-out-alt\"]],\n  template: function UpdateInquirystatusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateInquirystatusComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4);\n      i0.ɵɵtext(5, \"Add Inquiry Status\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 3)(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Status\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"select\", 9)(14, \"option\", 10);\n      i0.ɵɵtext(15, \"Select Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"option\", 11);\n      i0.ɵɵtext(17, \"In Process\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\", 12);\n      i0.ɵɵtext(19, \"Completed\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\", 13);\n      i0.ɵɵtext(21, \"Unable to Reach\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"br\")(23, \"span\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 3)(25, \"div\", 15)(26, \"div\", 16);\n      i0.ɵɵelement(27, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 16)(29, \"a\", 18);\n      i0.ɵɵelement(30, \"i\", 19);\n      i0.ɵɵtext(31, \" Back\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(32, \"div\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.inquiryForm);\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;AAWnE,OAAM,MAAOC,4BAA4B;EAGvC;EAEAC,YAAoBC,WAAwB,EAASC,qBAA2C,EAAQC,MAAa,EAAQC,KAAoB,EAASC,kBAAqC;IAA3K,gBAAW,GAAXJ,WAAW;IAAsB,0BAAqB,GAArBC,qBAAqB;IAA8B,WAAM,GAANC,MAAM;IAAe,UAAK,GAALC,KAAK;IAAwB,uBAAkB,GAAlBC,kBAAkB;IAHpK,OAAE,GAAQ,CAAC;IAMjB,IAAG,CAACA,kBAAkB,CAACC,kBAAkB,EAAE,IAAI,CAACD,kBAAkB,CAACE,OAAO,EAAC;MACzEJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAE7B,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,IAAI,CAACC,EAAE,GAACC,MAAM,CAAEF,MAAM,CAACG,GAAG,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC;EACJ;EAEEC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACf,WAAW,CAACgB,KAAK,CAAC;MACxCC,MAAM,EAAE,CAAC,EAAE,EAAEpB,UAAU,CAACqB,QAAQ;KACjC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACJ,WAAW,CAACK,KAAK,EAAE;MAC1B,IAAI,CAACnB,qBAAqB,CAACoB,mBAAmB,CAAC,IAAI,CAACV,EAAE,EAAC,IAAI,CAACI,WAAW,CAACO,QAAQ,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC;MACjG,IAAI,CAACrB,MAAM,CAACK,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;;EAG7C;;AA5BWT,4BAA4B;mBAA5BA,4BAA4B;AAAA;AAA5BA,4BAA4B;QAA5BA,4BAA4B;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbzCC,8BAAuB;MACaA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACrDD,8BAAwB;MAEOA,kCAAkB;MAAAA,iBAAK;MAEpDA,8BAAiB;MAIWA,uBAAM;MAAAA,iBAAQ;MAEpCA,+BAAmB;MAEWA,8BAAa;MAAAA,iBAAS;MAChDA,mCAA2B;MAAAA,2BAAU;MAAAA,iBAAS;MAC9CA,mCAA0B;MAAAA,0BAAS;MAAAA,iBAAS;MAC5CA,mCAAgC;MAAAA,gCAAe;MAAAA,iBAAS;MAE1DA,sBAAI;MAMNA,iBAAM;MAGRA,+BAA4B;MAGtBA,6BAIE;MACJA,iBAAM;MACNA,gCAAiB;MAEZA,yBAAmC;MAACA,sBAAI;MAAAA,iBAC1C;MAKTA,0BAAyB;MAC3BA,iBAAM;;;MA7CJA,eAAyB;MAAzBA,2CAAyB;MAqCgBA,gBAAiC;MAAjCA,uDAAiC","names":["Validators","UpdateInquirystatusComponent","constructor","formBuilder","ProductServiceService","router","route","UserserviceService","getuserloginstatus","isadmin","navigate","paramMap","subscribe","params","id","Number","get","ngOnInit","inquiryForm","group","status","required","onSubmit","valid","updateinquirystatus","controls","value","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\admin\\update-inquirystatus\\update-inquirystatus.component.ts","C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\admin\\update-inquirystatus\\update-inquirystatus.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductServiceService } from 'src/app/Services/product-service.service';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\nimport { UserserviceService } from '../../Services/userservices.service';\n\n\n@Component({\n  selector: 'app-update-inquirystatus',\n  templateUrl: './update-inquirystatus.component.html',\n  styleUrls: ['./update-inquirystatus.component.css']\n})\nexport class UpdateInquirystatusComponent {\n  inquiryForm!: FormGroup; \n  private id:number=0;\n  // Add the \"!\" operator to indicate that the property will be initialized\n\n  constructor(private formBuilder: FormBuilder,private ProductServiceService:ProductServiceService,public router:Router,public route:ActivatedRoute,private UserserviceService:UserserviceService) {\n    \n \n    if(!UserserviceService.getuserloginstatus() && !UserserviceService.isadmin){\n      router.navigate(['/Login']);\n    }  \n    this.route.paramMap.subscribe(params =>{\n      this.id=Number( params.get('id'));\n  })\n}\n\n  ngOnInit() {\n    this.inquiryForm = this.formBuilder.group({\n      status: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.inquiryForm.valid) {\n      this.ProductServiceService.updateinquirystatus(this.id,this.inquiryForm.controls['status'].value)\n      this.router.navigate(['/manage-inquiry'])\n      \n    }\n  }\n\n}\n\n","<div class=\"container\">\n    <form [formGroup]=\"inquiryForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"border p-3\">\n        <div class=\"form-group row\">\n          <h2 class=\"text-info pl-3\">Add Inquiry Status</h2>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-8\">\n            <div class=\"form-group row\">\n              <div class=\"col-4\">\n                <label for=\"status\">Status</label>\n              </div>\n              <div class=\"col-8\">\n                <select class=\"form-control\" id=\"status\" formControlName=\"status\">\n                  <option disabled selected>Select Status</option>\n                  <option value=\"In Process\">In Process</option>\n                  <option value=\"Completed\">Completed</option>\n                  <option value=\"Unable to Reach\">Unable to Reach</option>\n                </select>\n                <br>\n                <span\n                  class=\"text-danger field-validation-valid\"\n                  data-valmsg-for=\"Name\"\n                  data-valmsg-replace=\"true\"\n                ></span>\n              </div>\n            </div>\n  \n            <div class=\"form-group row\">\n              <div class=\"col-8 offset-4 row\">\n                <div class=\"col\">\n                  <input\n                    type=\"submit\"\n                    class=\"btn btn-info w-100\"\n                    value=\"Update\"\n                  />\n                </div>\n                <div class=\"col\">\n                  <a class=\"btn btn-success w-100\" [routerLink]=\"['manage-inquiry']\"\n                    ><i class=\"fas fa-sign-out-alt\"></i> Back</a\n                  >\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-4\"></div>\n        </div>\n      </div>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}