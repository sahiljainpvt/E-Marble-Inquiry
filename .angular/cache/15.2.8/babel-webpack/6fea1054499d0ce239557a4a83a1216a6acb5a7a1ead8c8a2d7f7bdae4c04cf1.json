{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Product } from 'src/app/data/product';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/product-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../Services/userservices.service\";\nimport * as i5 from \"@angular/common/http\";\nimport * as i6 from \"@angular/common\";\nfunction CreateProductComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 32);\n    i0.ɵɵtext(1, \" The Name field is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateProductComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 32);\n    i0.ɵɵtext(1, \" The field Price must be a number between 1 and 2147483647. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateProductComponent_img_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 33);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r2.imagePathList[0], i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CreateProductComponent_option_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r7.Id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cat_r7.CategoryName);\n  }\n}\nfunction CreateProductComponent_span_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 32);\n    i0.ɵɵtext(1, \" The Category Type field is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateProductComponent_option_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const app_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", app_r8.Id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(app_r8.ApplicationName);\n  }\n}\nfunction CreateProductComponent_span_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 32);\n    i0.ɵɵtext(1, \" The Application Type field is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreateProductComponent {\n  constructor(formBuilder, productServiceService, router, userserviceService, http // Inject HttpClient module here\n  ) {\n    this.formBuilder = formBuilder;\n    this.productServiceService = productServiceService;\n    this.router = router;\n    this.userserviceService = userserviceService;\n    this.http = http;\n    this.id = 0;\n    this.imagePathList = [];\n    this.Category = [];\n    this.application = [];\n    this.productname = \"\";\n    this.productlist = [];\n    this.loading = false;\n    if (!userserviceService.getuserloginstatus() && !userserviceService.isadmin) {\n      router.navigate(['/Login']);\n    }\n    this.productlist = productServiceService.getProduct();\n    this.Category = productServiceService.getcategory();\n    this.application = productServiceService.getapplication();\n  }\n  ngOnInit() {\n    this.productForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: ['', [Validators.required, Validators.min(1), Validators.max(2147483647)]],\n      shortDesc: [''],\n      description: [''],\n      categoryId: ['', Validators.required],\n      applicationTypeId: ['', Validators.required]\n    });\n  }\n  onFileChange(event) {\n    this.file = event.target.files[0];\n  }\n  OnUploadFile() {\n    console.log(\"upload.....\");\n    // Upload file here and send binary data\n    this.http.post('./assets', this.file).subscribe(response => {\n      console.log('File uploaded successfully');\n      // Handle the response if required\n    }, error => {\n      console.error('Error uploading file:', error);\n      // Handle the error if required\n    });\n  }\n\n  onSubmit() {\n    if (this.productForm.valid) {\n      const productName = this.productForm.controls['name'].value;\n      const isDuplicate = this.productlist.some(product => product.Name?.toLowerCase() === productName.toLowerCase());\n      if (isDuplicate) {\n        alert(\"Duplicate product name not allowed.\");\n      } else {\n        this.OnUploadFile();\n        const product = new Product(this.id, productName, this.productForm.controls['shortDesc'].value, this.productForm.controls['price'].value, this.imagePathList[0], this.productForm.controls['categoryId'].value, this.productForm.controls['applicationTypeId'].value, this.productForm.controls['description'].value);\n        this.productServiceService.Addproduct(product);\n        console.log(this.productServiceService.getProduct());\n        this.router.navigate(['/displayproductlist']);\n      }\n    }\n  }\n}\nCreateProductComponent.ɵfac = function CreateProductComponent_Factory(t) {\n  return new (t || CreateProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductServiceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.UserserviceService), i0.ɵɵdirectiveInject(i5.HttpClient));\n};\nCreateProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateProductComponent,\n  selectors: [[\"app-create-product\"]],\n  decls: 81,\n  vars: 10,\n  consts: [[1, \"container\", \"m-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"border\", \"p-3\"], [1, \"form-group\", \"row\"], [1, \"text-center\", \"text-info\", \"pl-3\"], [1, \"row\"], [1, \"col-8\"], [1, \"col-4\"], [1, \"text-danger\"], [\"for\", \"Product_Name\"], [\"type\", \"text\", \"id\", \"Product_Name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger field-validation-valid\", 4, \"ngIf\"], [\"for\", \"Product_Price\"], [\"type\", \"text\", \"id\", \"Product_Price\", \"formControlName\", \"price\", 1, \"form-control\"], [\"for\", \"Product_ShortDesc\"], [\"type\", \"text\", \"id\", \"Product_ShortDesc\", \"formControlName\", \"shortDesc\", 1, \"form-control\"], [\"for\", \"Product_Description\"], [\"id\", \"Product_Description\", \"formControlName\", \"description\", 1, \"form-control\", \"summernote\"], [\"for\", \"Product_Image\"], [\"type\", \"file\", \"name\", \"files\", \"id\", \"uploadBox\", \"multiple\", \"\", 1, \"form-control\", 3, \"change\"], [\"alt\", \"Selected Image\", \"style\", \"max-width: 200px; max-height: 200px;\", 3, \"src\", 4, \"ngIf\"], [\"for\", \"Product_CategoryId\"], [\"id\", \"Product_CategoryId\", \"formControlName\", \"categoryId\", 1, \"form-control\"], [\"disabled\", \"\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"Product_ApplicationTypeId\"], [\"id\", \"Product_ApplicationTypeId\", \"formControlName\", \"applicationTypeId\", 1, \"form-control\"], [1, \"col-8\", \"offset-4\", \"row\"], [1, \"col\"], [\"type\", \"submit\", \"value\", \"Create\", 1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"], [1, \"btn\", \"btn-success\", \"w-100\", 3, \"routerLink\"], [1, \"fas\", \"fa-sign-out-alt\"], [1, \"text-danger\", \"field-validation-valid\"], [\"alt\", \"Selected Image\", 2, \"max-width\", \"200px\", \"max-height\", \"200px\", 3, \"src\"], [3, \"value\"]],\n  template: function CreateProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateProductComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4);\n      i0.ɵɵtext(5, \"Create Product\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 3)(9, \"div\", 7);\n      i0.ɵɵelement(10, \"p\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"div\", 6);\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 6);\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵtemplate(17, CreateProductComponent_span_17_Template, 2, 0, \"span\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"div\", 7)(21, \"label\", 12);\n      i0.ɵɵtext(22, \"Price\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 6);\n      i0.ɵɵelement(24, \"input\", 13);\n      i0.ɵɵtemplate(25, CreateProductComponent_span_25_Template, 2, 0, \"span\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵelementStart(27, \"div\", 3)(28, \"div\", 7)(29, \"label\", 14);\n      i0.ɵɵtext(30, \"ShortDesc\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 6);\n      i0.ɵɵelement(32, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(33, \"br\");\n      i0.ɵɵelementStart(34, \"div\", 3)(35, \"div\", 7)(36, \"label\", 16);\n      i0.ɵɵtext(37, \"Description\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 6);\n      i0.ɵɵelement(39, \"textarea\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(40, \"br\");\n      i0.ɵɵelementStart(41, \"div\", 3)(42, \"div\", 7)(43, \"label\", 18);\n      i0.ɵɵtext(44, \"Image\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"div\", 6)(46, \"input\", 19);\n      i0.ɵɵlistener(\"change\", function CreateProductComponent_Template_input_change_46_listener($event) {\n        return ctx.onFileChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(47, \"br\");\n      i0.ɵɵtemplate(48, CreateProductComponent_img_48_Template, 1, 1, \"img\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(49, \"br\");\n      i0.ɵɵelementStart(50, \"div\", 3)(51, \"div\", 7)(52, \"label\", 21);\n      i0.ɵɵtext(53, \"Category Type\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"div\", 6)(55, \"select\", 22)(56, \"option\", 23);\n      i0.ɵɵtext(57, \"--Select Category--\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(58, CreateProductComponent_option_58_Template, 2, 2, \"option\", 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(59, CreateProductComponent_span_59_Template, 2, 0, \"span\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(60, \"br\");\n      i0.ɵɵelementStart(61, \"div\", 3)(62, \"div\", 7)(63, \"label\", 25);\n      i0.ɵɵtext(64, \"Application Type\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(65, \"div\", 6)(66, \"select\", 26)(67, \"option\", 23);\n      i0.ɵɵtext(68, \"--Select Application Type--\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(69, CreateProductComponent_option_69_Template, 2, 2, \"option\", 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(70, CreateProductComponent_span_70_Template, 2, 0, \"span\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(71, \"br\");\n      i0.ɵɵelementStart(72, \"div\", 3)(73, \"div\", 27)(74, \"div\", 28);\n      i0.ɵɵelement(75, \"input\", 29);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(76, \"div\", 28)(77, \"a\", 30);\n      i0.ɵɵelement(78, \"i\", 31);\n      i0.ɵɵtext(79, \" Back \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(80, \"div\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_5_0;\n      let tmp_7_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.productForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.productForm.get(\"name\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.productForm.get(\"name\")) == null ? null : tmp_1_0.touched)));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.productForm.get(\"price\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.productForm.get(\"price\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.productForm.get(\"price\")) == null ? null : tmp_2_0.touched)));\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngIf\", ctx.imagePathList[0]);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Category);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.productForm.get(\"categoryId\")) == null ? null : tmp_5_0.invalid) && (((tmp_5_0 = ctx.productForm.get(\"categoryId\")) == null ? null : tmp_5_0.dirty) || ((tmp_5_0 = ctx.productForm.get(\"categoryId\")) == null ? null : tmp_5_0.touched)));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.application);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.productForm.get(\"applicationTypeId\")) == null ? null : tmp_7_0.invalid) && (((tmp_7_0 = ctx.productForm.get(\"applicationTypeId\")) == null ? null : tmp_7_0.dirty) || ((tmp_7_0 = ctx.productForm.get(\"applicationTypeId\")) == null ? null : tmp_7_0.touched)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", ctx.productForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", \"/displayproductlist\");\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Product","i0","CreateProductComponent","constructor","formBuilder","productServiceService","router","userserviceService","http","getuserloginstatus","isadmin","navigate","productlist","getProduct","Category","getcategory","application","getapplication","ngOnInit","productForm","group","name","required","price","min","max","shortDesc","description","categoryId","applicationTypeId","onFileChange","event","file","target","files","OnUploadFile","console","log","post","subscribe","response","error","onSubmit","valid","productName","controls","value","isDuplicate","some","product","Name","toLowerCase","alert","id","imagePathList","Addproduct","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\admin\\create-product\\create-product.component.ts","C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\admin\\create-product\\create-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProductServiceService } from 'src/app/Services/product-service.service';\nimport { Applicationtype } from 'src/app/data/applicationtype';\nimport { Product } from 'src/app/data/product';\nimport { UserserviceService } from '../../Services/userservices.service';\nimport { Category } from '../../data/category';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.css']\n})\nexport class CreateProductComponent implements OnInit {\n  public productForm: any;\n  public id: number = 0;\n  public imagePathList: string[] = [];\n  public Category: Category[] = [];\n  public application: Applicationtype[] = [];\n  public product: Product | undefined;\n  public productname?: string = \"\";\n  public productlist: Product[] = [];\n  loading: boolean = false;\n  file?: File;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productServiceService: ProductServiceService,\n    public router: Router,\n    public userserviceService: UserserviceService,\n    private http: HttpClient // Inject HttpClient module here\n  ) {\n    if (!userserviceService.getuserloginstatus() && !userserviceService.isadmin) {\n      router.navigate(['/Login']);\n    }\n    this.productlist = productServiceService.getProduct();\n    this.Category = productServiceService.getcategory();\n    this.application = productServiceService.getapplication();\n  }\n\n  ngOnInit(): void {\n    this.productForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: ['', [Validators.required, Validators.min(1), Validators.max(2147483647)]],\n      shortDesc: [''],\n      description: [''],\n      categoryId: ['', Validators.required],\n      applicationTypeId: ['', Validators.required]\n    });\n  }\n\n  onFileChange(event: any) {\n    this.file = event.target.files[0];\n  }\n\n  OnUploadFile() {\n    console.log(\"upload.....\");\n    // Upload file here and send binary data\n    this.http.post('./assets', this.file).subscribe(\n      (response: any) => {\n        console.log('File uploaded successfully');\n        // Handle the response if required\n      },\n      (error: any) => {\n        console.error('Error uploading file:', error);\n        // Handle the error if required\n      }\n    );\n  }\n\n  onSubmit() {\n    if (this.productForm.valid) {\n      const productName = this.productForm.controls['name'].value;\n      const isDuplicate = this.productlist.some(product => product.Name?.toLowerCase() === productName.toLowerCase());\n      if (isDuplicate) {\n        alert(\"Duplicate product name not allowed.\");\n      } else {\n        this.OnUploadFile();\n        const product = new Product(\n          this.id,\n          productName,\n          this.productForm.controls['shortDesc'].value,\n          this.productForm.controls['price'].value,\n          this.imagePathList[0],\n          this.productForm.controls['categoryId'].value,\n          this.productForm.controls['applicationTypeId'].value,\n          this.productForm.controls['description'].value\n        );\n\n        this.productServiceService.Addproduct(product);\n        console.log(this.productServiceService.getProduct());\n        this.router.navigate(['/displayproductlist']);\n      }\n    }\n  }\n}\n","<div class=\"container m-4\">\n  <form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"border p-3\">\n      <div class=\"form-group row\">\n        <h2 class=\"text-center text-info pl-3\">Create Product</h2>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-8\">\n          <div class=\"form-group row\">\n            <div class=\"col-4\">\n              <p class=\"text-danger\"></p>\n            </div>\n            <div class=\"col-8\"></div>\n            <div class=\"col-4\">\n              <label for=\"Product_Name\">Name</label>\n            </div>\n            <div class=\"col-8\">\n              <input class=\"form-control\" type=\"text\" id=\"Product_Name\" formControlName=\"name\" />\n              <span class=\"text-danger field-validation-valid\" *ngIf=\"productForm.get('name')?.invalid && (productForm.get('name')?.dirty || productForm.get('name')?.touched)\">\n                The Name field is required.\n              </span>\n            </div>\n          </div>\n          <br />\n          <div class=\"form-group row\">\n            <div class=\"col-4\">\n              <label for=\"Product_Price\">Price</label>\n            </div>\n            <div class=\"col-8\">\n              <input class=\"form-control\" type=\"text\" id=\"Product_Price\" formControlName=\"price\" />\n              <span class=\"text-danger field-validation-valid\" *ngIf=\"productForm.get('price')?.invalid && (productForm.get('price')?.dirty || productForm.get('price')?.touched)\">\n                The field Price must be a number between 1 and 2147483647.\n              </span>\n            </div>\n          </div>\n          <br />\n          <div class=\"form-group row\">\n            <div class=\"col-4\">\n              <label for=\"Product_ShortDesc\">ShortDesc</label>\n            </div>\n            <div class=\"col-8\">\n              <input class=\"form-control\" type=\"text\" id=\"Product_ShortDesc\" formControlName=\"shortDesc\" />\n            </div>\n          </div>\n          <br />\n\n          <div class=\"form-group row\">\n            <div class=\"col-4\">\n              <label for=\"Product_Description\">Description</label>\n            </div>\n            <div class=\"col-8\">\n              <textarea class=\"form-control summernote\" id=\"Product_Description\" formControlName=\"description\"></textarea>\n            </div>\n          </div>\n          <br />\n          <!-- <div class=\"form-group row\">\n            <div class=\"col-4\">Image</div>\n            <div class=\"col-8\">\n              <input type=\"file\" (change)=\"onFileChange($event)\" name=\"files\" id=\"uploadBox\" multiple class=\"form-control\" />\n            </div>\n          </div> -->\n\n          <div class=\"form-group row\">\n            <div class=\"col-4\">\n              <label for=\"Product_Image\">Image</label>\n            </div>\n            <div class=\"col-8\">\n              <input type=\"file\" (change)=\"onFileChange($event)\" name=\"files\" id=\"uploadBox\" multiple class=\"form-control\" />\n              <br />\n              <img [src]=\"imagePathList[0]\" alt=\"Selected Image\" *ngIf=\"imagePathList[0]\" style=\"max-width: 200px; max-height: 200px;\" />\n            </div>\n          </div>\n          <br />\n          <div class=\"form-group row\">\n            <div class=\"col-4\">\n              <label for=\"Product_CategoryId\">Category Type</label>\n            </div>\n            <div class=\"col-8\">\n              <select class=\"form-control\" id=\"Product_CategoryId\" formControlName=\"categoryId\">\n                <option disabled selected>--Select Category--</option>\n                <option *ngFor=\"let cat of Category\" [value]=\"cat.Id\">{{ cat.CategoryName }}</option>\n              </select>\n              <span class=\"text-danger field-validation-valid\" *ngIf=\"productForm.get('categoryId')?.invalid && (productForm.get('categoryId')?.dirty || productForm.get('categoryId')?.touched)\">\n                The Category Type field is required.\n              </span>\n            </div>\n          </div>\n          <br />\n          <div class=\"form-group row\">\n            <div class=\"col-4\">\n              <label for=\"Product_ApplicationTypeId\">Application Type</label>\n            </div>\n            <div class=\"col-8\">\n              <select class=\"form-control\" id=\"Product_ApplicationTypeId\" formControlName=\"applicationTypeId\">\n                <option disabled selected>--Select Application Type--</option>\n                <option *ngFor=\"let app of application\" [value]=\"app.Id\">{{ app.ApplicationName }}</option>\n              </select>\n              <span class=\"text-danger field-validation-valid\" *ngIf=\"productForm.get('applicationTypeId')?.invalid && (productForm.get('applicationTypeId')?.dirty || productForm.get('applicationTypeId')?.touched)\">\n                The Application Type field is required.\n              </span>\n            </div>\n          </div>\n          <br />\n          <div class=\"form-group row\">\n            <div class=\"col-8 offset-4 row\">\n              <div class=\"col\">\n                <input type=\"submit\" [disabled]=\"productForm.invalid\" class=\"btn btn-primary w-100\" value=\"Create\" />\n              </div>\n              <div class=\"col\">\n                <a class=\"btn btn-success w-100\" [routerLink]=\"'/displayproductlist'\">\n                  <i class=\"fas fa-sign-out-alt\"></i> Back\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-4\"></div>\n      </div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}