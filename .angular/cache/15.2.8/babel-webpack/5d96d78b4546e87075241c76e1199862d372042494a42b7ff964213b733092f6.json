{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Category } from '../../data/category';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/product-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../Services/userservices.service\";\nconst _c0 = function () {\n  return [\"/displaycat\"];\n};\nexport class CreatecatComponent {\n  constructor(ProductServiceService, router, route, formBuilder, UserserviceService) {\n    this.ProductServiceService = ProductServiceService;\n    this.router = router;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.UserserviceService = UserserviceService;\n    this.catname = \"\";\n    this.id = 0;\n    this.Categorylist = [];\n    if (!UserserviceService.getuserloginstatus() && !UserserviceService.isadmin) {\n      router.navigate(['/Login']);\n    }\n    this.Categorylist = this.ProductServiceService.getcategory();\n    this.route.paramMap.subscribe(params => {\n      this.id = Number(params.get('id'));\n    });\n    if (this.id !== 0) {\n      this.Category = this.ProductServiceService.getcategorybyId(this.id);\n      if (this.Category !== undefined) {\n        this.catname = this.Category.CategoryName;\n      }\n    }\n  }\n  ngOnInit() {\n    this.categoryForm = this.formBuilder.group({\n      name: [this.catname, Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.categoryForm.valid) {\n      console.log(this.categoryForm.controls['name'].value);\n      if (this.id !== 0) {\n        const temp = this.Categorylist.find(c => c.CategoryName?.toLowerCase() === this.categoryForm.controls['name'].value.toLowerCase().trim());\n        if (temp != undefined) {\n          alert(\"duplicate category not allowed\");\n        } else {\n          this.ProductServiceService.addcategory(new Category(this.id, this.categoryForm.controls['name'].value));\n          this.router.navigate(['/displaycat']);\n        }\n      } else {\n        const temp = this.Categorylist.find(c => c.CategoryName?.toLowerCase() === this.categoryForm.controls['name'].value.toLowerCase().trim());\n        if (temp != undefined) {\n          alert(\"duplicate category not allowed\");\n        } else {\n          this.ProductServiceService.addcategory(new Category(0, this.categoryForm.controls['name'].value));\n          this.router.navigate(['/displaycat']);\n        }\n      }\n    }\n  }\n}\nCreatecatComponent.ɵfac = function CreatecatComponent_Factory(t) {\n  return new (t || CreatecatComponent)(i0.ɵɵdirectiveInject(i1.ProductServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.UserserviceService));\n};\nCreatecatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreatecatComponent,\n  selectors: [[\"app-createcat\"]],\n  decls: 28,\n  vars: 4,\n  consts: [[1, \"container\", \"border-5\", \"bg-gradient\"], [1, \"container\", \"p-5\", \"m-3\", \"border-dark\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"border\", \"p-3\"], [1, \"form-group\", \"row\"], [1, \"text-info\", \"pl-3\"], [1, \"row\"], [1, \"col-8\"], [1, \"col-4\"], [\"for\", \"Name\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [1, \"col-8\", \"offset-4\", \"row\"], [1, \"col\"], [\"type\", \"submit\", \"value\", \"Create\", 1, \"btn\", \"btn-info\", \"w-100\", 3, \"disabled\"], [1, \"btn\", \"btn-success\", \"w-100\", 3, \"routerLink\"], [1, \"fas\", \"fa-sign-out-alt\"]],\n  template: function CreatecatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreatecatComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n      i0.ɵɵtext(6, \"Create Category\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 4)(11, \"div\", 8)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 7);\n      i0.ɵɵelement(15, \"input\", 10)(16, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"div\", 4);\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 11)(21, \"div\", 12);\n      i0.ɵɵelement(22, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 12)(24, \"a\", 14);\n      i0.ɵɵelement(25, \"i\", 15);\n      i0.ɵɵtext(26, \" Back \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(27, \"div\", 8);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"disabled\", ctx.categoryForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Category","CreatecatComponent","constructor","ProductServiceService","router","route","formBuilder","UserserviceService","getuserloginstatus","isadmin","navigate","Categorylist","getcategory","paramMap","subscribe","params","id","Number","get","getcategorybyId","undefined","catname","CategoryName","ngOnInit","categoryForm","group","name","required","onSubmit","valid","console","log","controls","value","temp","find","c","toLowerCase","trim","alert","addcategory","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\admin\\createcat\\createcat.component.ts","C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\admin\\createcat\\createcat.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {  OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductServiceService } from '../../Services/product-service.service';\nimport { Category } from '../../data/category';\nimport { ignoreElements } from 'rxjs';\nimport { UserserviceService } from '../../Services/userservices.service';\nimport { User } from 'src/app/data/user';\nimport { Product } from 'src/app/data/product';\n\n\n\n@Component({\n  selector: 'app-createcat',\n  templateUrl: './createcat.component.html',\n  styleUrls: ['./createcat.component.css']\n})\nexport class CreatecatComponent implements OnInit {\n  public categoryForm: any;\n  public catname?: string=\"\";\n  public Category?:Category | undefined;\n  public id:number=0;\n  public Categorylist:Category[]=[];\n\n  constructor(private ProductServiceService:ProductServiceService,public router:Router,public route:ActivatedRoute,private formBuilder: FormBuilder,private UserserviceService:UserserviceService){\n    if(!UserserviceService.getuserloginstatus() && !UserserviceService.isadmin){\n      router.navigate(['/Login']);\n    }  \n    this.Categorylist= this.ProductServiceService.getcategory();\n    this.route.paramMap.subscribe(params =>{\n      this.id=Number( params.get('id'));\n    })\n      if(this.id!==0){\n      this.Category=this.ProductServiceService.getcategorybyId(this.id);\n      if(this.Category!==undefined){\n        this.catname=this.Category.CategoryName;\n      }\n    }\n  }\n  ngOnInit(): void {\n    \n    this.categoryForm = this.formBuilder.group({\n      name: [this.catname, Validators.required]\n    });\n  }\n  onSubmit() {\n \n    if (this.categoryForm.valid) {\n      console.log(this.categoryForm.controls['name'].value);\n      if(this.id!==0){\n        const temp=this.Categorylist.find(c=>c.CategoryName?.toLowerCase()===(this.categoryForm.controls['name'].value).toLowerCase().trim())\n        if(temp!=undefined){\n          alert(\"duplicate category not allowed\")\n        }else{\n      this.ProductServiceService.addcategory(new Category(this.id,this.categoryForm.controls['name'].value))\n        this.router.navigate(['/displaycat'])\n        }\n      }\n\n    else{\n      const temp=this.Categorylist.find(c=>c.CategoryName?.toLowerCase()===(this.categoryForm.controls['name'].value).toLowerCase().trim())\n      if(temp!=undefined){\n        alert(\"duplicate category not allowed\")\n      }\n      else{\n      this.ProductServiceService.addcategory(new Category(0,this.categoryForm.controls['name'].value))\n      this.router.navigate(['/displaycat'])\n      }\n    }\n\n  }\n\n\n}\n}\n","<div class=\"container border-5 bg-gradient\">\n  <div class=\"container p-5 m-3 border-dark\">\n    <form [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"border p-3\">\n        <div class=\"form-group row\">\n          <h2 class=\"text-info pl-3\">Create Category</h2>\n        </div>\n        <br>\n        <div class=\"row\">\n          <div class=\"col-8\">\n            <div class=\"form-group row\">\n              <div class=\"col-4\">\n                <label for=\"Name\">Name</label>\n              </div>\n              <div class=\"col-8\">\n                <input class=\"form-control\" type=\"text\" formControlName=\"name\" />\n                <br>\n              </div>\n              <br />\n            </div>\n            <div class=\"form-group row\">\n            </div>\n            <div class=\"form-group row\">\n              <div class=\"col-8 offset-4 row\">\n                <div class=\"col\">\n                  <input type=\"submit\" class=\"btn btn-info w-100\" value=\"Create\" [disabled]=\"categoryForm.invalid\" />\n                </div>\n                <div class=\"col\">\n                  <a class=\"btn btn-success w-100\" [routerLink]=\"['/displaycat']\">\n                    <i class=\"fas fa-sign-out-alt\"></i> Back\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-4\"></div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}