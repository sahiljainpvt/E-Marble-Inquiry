{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { User } from 'src/app/data/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/userservices.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(dataservice, router) {\n    this.dataservice = dataservice;\n    this.router = router;\n    this.registerForm = new FormGroup({\n      name: new FormControl(''),\n      email: new FormControl(''),\n      phone: new FormControl(''),\n      password: new FormControl(''),\n      confirmPassword: new FormControl('')\n    });\n  }\n  onSubmit() {\n    const name = this.registerForm.get('name')?.value ?? '';\n    const email = this.registerForm.get('email')?.value ?? '';\n    const phone = this.registerForm.get('phone')?.value ?? '';\n    const password = this.registerForm.get('password')?.value ?? '';\n    const confirmPassword = this.registerForm.get('confirmPassword')?.value ?? '';\n    this.newUser = new User(0, name, email, phone, password);\n    console.log(this.registerForm.value);\n    this.dataservice.addUser(this.newUser);\n    this.router.navigate(['/Login']);\n    console.log(this.dataservice.getUData());\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UserserviceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\", \"bg-light\", \"border\", \"rounded\", \"p-4\"], [1, \"text-center\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"tel\", \"id\", \"phone\", \"formControlName\", \"phone\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"required\", \"\", 1, \"form-control\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mt-10\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 10);\n      i0.ɵɵtext(16, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\", 12);\n      i0.ɵɵtext(20, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 5)(23, \"label\", 14);\n      i0.ɵɵtext(24, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 16)(27, \"button\", 17);\n      i0.ɵɵtext(28, \"Register\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AACvD,SAASC,IAAI,QAAQ,mBAAmB;;;;;AASxC,OAAM,MAAOC,iBAAiB;EAG5BC,YAAmBC,WAA+B,EAAQC,MAAa;IAApD,gBAAW,GAAXD,WAAW;IAA4B,WAAM,GAANC,MAAM;IAEhE,iBAAY,GAAG,IAAIL,SAAS,CAAC;MAC3BM,IAAI,EAAE,IAAIP,WAAW,CAAC,EAAE,CAAC;MACzBQ,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,CAAC;MAC1BS,KAAK,EAAE,IAAIT,WAAW,CAAC,EAAE,CAAC;MAC1BU,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,CAAC;MAC7BW,eAAe,EAAE,IAAIX,WAAW,CAAC,EAAE;KACpC,CAAC;EARwE;EAU1EY,QAAQ;IACN,MAAML,IAAI,GAAW,IAAI,CAACM,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAK,IAAI,EAAE;IAC/D,MAAMP,KAAK,GAAW,IAAI,CAACK,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,IAAI,EAAE;IACjE,MAAMN,KAAK,GAAW,IAAI,CAACI,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,IAAI,EAAE;IACjE,MAAML,QAAQ,GAAW,IAAI,CAACG,YAAY,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK,IAAI,EAAE;IACvE,MAAMJ,eAAe,GAAW,IAAI,CAACE,YAAY,CAACC,GAAG,CAAC,iBAAiB,CAAC,EAAEC,KAAK,IAAI,EAAE;IAErF,IAAI,CAACC,OAAO,GAAG,IAAId,IAAI,CAAC,CAAC,EAACK,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,CAAC;IACvDO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,YAAY,CAACE,KAAK,CAAC;IACpC,IAAI,CAACV,WAAW,CAACc,OAAO,CAAC,IAAI,CAACH,OAAO,CAAC;IACtC,IAAI,CAACV,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChCH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,WAAW,CAACgB,QAAQ,EAAE,CAAC;EAC1C;;AAzBWlB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,8BAA4B;MAGSA,wBAAQ;MAAAA,iBAAK;MAC1CA,+BAAyD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACtDD,8BAAkB;MACqBA,qBAAK;MAAAA,iBAAQ;MAClDA,2BAAkF;MACpFA,iBAAM;MAENA,+BAAkB;MACsBA,uBAAM;MAAAA,iBAAQ;MACpDA,4BAAqF;MACvFA,iBAAM;MAENA,+BAAkB;MACsBA,8BAAa;MAAAA,iBAAQ;MAC3DA,6BAAmF;MACrFA,iBAAM;MAENA,+BAAkB;MACyBA,0BAAS;MAAAA,iBAAQ;MAC1DA,6BAA8F;MAChGA,iBAAM;MAENA,+BAAkB;MACgCA,kCAAiB;MAAAA,iBAAQ;MACzEA,6BAA4G;MAC9GA,iBAAM;MAENA,gCAAyB;MAC6BA,yBAAQ;MAAAA,iBAAS;;;MA3BnEA,eAA0B;MAA1BA,4CAA0B","names":["FormControl","FormGroup","User","RegisterComponent","constructor","dataservice","router","name","email","phone","password","confirmPassword","onSubmit","registerForm","get","value","newUser","console","log","addUser","navigate","getUData","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\158590\\Downloads\\E-Marble_Inquiry\\src\\app\\authentication\\register\\register.component.ts","C:\\Users\\158590\\Downloads\\E-Marble_Inquiry\\src\\app\\authentication\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { User } from 'src/app/data/user';\nimport { UserserviceService } from 'src/app/Services/userservices.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  newUser: any;\n\n  constructor(public dataservice: UserserviceService,public router:Router) {}\n\n  registerForm = new FormGroup({\n    name: new FormControl(''),\n    email: new FormControl(''),\n    phone: new FormControl(''),\n    password: new FormControl(''),\n    confirmPassword: new FormControl('')\n  });\n\n  onSubmit() {\n    const name: string = this.registerForm.get('name')?.value ?? '';\n    const email: string = this.registerForm.get('email')?.value ?? '';\n    const phone: string = this.registerForm.get('phone')?.value ?? '';\n    const password: string = this.registerForm.get('password')?.value ?? '';\n    const confirmPassword: string = this.registerForm.get('confirmPassword')?.value ?? '';\n\n    this.newUser = new User(0,name, email, phone, password);\n    console.log(this.registerForm.value);\n    this.dataservice.addUser(this.newUser);\n    this.router.navigate(['/Login']);\n    console.log(this.dataservice.getUData());\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6 bg-light border rounded p-4\">\n        <h1 class=\"text-center mb-4\">Register</h1>\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">Name:</label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\" required>\n          </div>\n  \n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email:</label>\n            <input type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-control\" required>\n          </div>\n  \n          <div class=\"mb-3\">\n            <label for=\"phone\" class=\"form-label\">Phone Number:</label>\n            <input type=\"tel\" id=\"phone\" formControlName=\"phone\" class=\"form-control\" required>\n          </div>\n  \n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\">Password:</label>\n            <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" required>\n          </div>\n  \n          <div class=\"mb-3\">\n            <label for=\"confirmPassword\" class=\"form-label\">Confirm Password:</label>\n            <input type=\"password\" id=\"confirmPassword\" formControlName=\"confirmPassword\" class=\"form-control\" required>\n          </div>\n  \n          <div class=\"text-center\">\n            <button type=\"submit\" class=\"btn btn-success mt-10\">Register</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}