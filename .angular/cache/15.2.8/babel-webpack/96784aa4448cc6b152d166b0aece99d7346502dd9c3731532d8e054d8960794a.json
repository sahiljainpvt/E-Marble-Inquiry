{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Product } from 'src/app/data/product';\nimport { HttpHeaders } from '@angular/common/http';\nlet CreateProductComponent = class CreateProductComponent {\n  constructor(formBuilder, productServiceService, router, userserviceService, http // Inject HttpClient module here\n  ) {\n    this.formBuilder = formBuilder;\n    this.productServiceService = productServiceService;\n    this.router = router;\n    this.userserviceService = userserviceService;\n    this.http = http;\n    this.id = 0;\n    this.imagePathList = [];\n    this.Category = [];\n    this.application = [];\n    this.productname = \"\";\n    this.productlist = [];\n    this.loading = false;\n    this.isAlert = false;\n    if (!userserviceService.getuserloginstatus() && !userserviceService.isadmin) {\n      router.navigate(['/Login']);\n    }\n    this.productlist = productServiceService.getProduct();\n    this.Category = productServiceService.getcategory();\n    this.application = productServiceService.getapplication();\n  }\n  ngOnInit() {\n    this.productForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: ['', [Validators.required, Validators.min(1), Validators.max(2147483647)]],\n      shortDesc: [''],\n      description: [''],\n      categoryId: ['', Validators.required],\n      applicationTypeId: ['', Validators.required]\n    });\n  }\n  onFileChange(event) {\n    this.file = event.target.files[0];\n  }\n  OnUploadFile() {\n    console.log('upload.....');\n    if (this.file) {\n      const formData = new FormData();\n      formData.append('file', this.file);\n      const headers = new HttpHeaders();\n      headers.append('Content-Type', 'multipart/form-data');\n      this.http.post('assets', formData, {\n        headers\n      }).subscribe(response => {\n        console.log('File uploaded successfully');\n        // Handle the response if required\n      }, error => {\n        console.error('Error uploading file:', error);\n        // Handle the error if required\n      });\n    }\n  }\n\n  onSubmit() {\n    if (this.productForm.valid) {\n      const productName = this.productForm.controls['name'].value;\n      const isDuplicate = this.productlist.some(product => product.Name?.toLowerCase() === productName.toLowerCase());\n      if (isDuplicate) {\n        this.onAlertOpen();\n        setTimeout(() => {\n          this.onAlertClose();\n        }, 3000);\n      } else {\n        this.OnUploadFile(); // Upload the file before adding the product\n        const product = new Product(this.id, productName, this.productForm.controls['shortDesc'].value, this.productForm.controls['price'].value, this.imagePathList[0], this.productForm.controls['categoryId'].value, this.productForm.controls['applicationTypeId'].value, this.productForm.controls['description'].value);\n        this.productServiceService.Addproduct(product);\n        console.log(this.productServiceService.getProduct());\n        this.router.navigate(['/displayproductlist']);\n      }\n    }\n  }\n  onAlertClose() {\n    this.isAlert = false;\n  }\n  onAlertOpen() {\n    this.isAlert = true;\n  }\n};\nCreateProductComponent = __decorate([Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.css']\n})], CreateProductComponent);\nexport { CreateProductComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","Product","HttpHeaders","CreateProductComponent","constructor","formBuilder","productServiceService","router","userserviceService","http","getuserloginstatus","isadmin","navigate","productlist","getProduct","Category","getcategory","application","getapplication","ngOnInit","productForm","group","name","required","price","min","max","shortDesc","description","categoryId","applicationTypeId","onFileChange","event","file","target","files","OnUploadFile","console","log","formData","FormData","append","headers","post","subscribe","response","error","onSubmit","valid","productName","controls","value","isDuplicate","some","product","Name","toLowerCase","onAlertOpen","setTimeout","onAlertClose","id","imagePathList","Addproduct","isAlert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\admin\\create-product\\create-product.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProductServiceService } from 'src/app/Services/product-service.service';\nimport { Applicationtype } from 'src/app/data/applicationtype';\nimport { Product } from 'src/app/data/product';\nimport { UserserviceService } from '../../Services/userservices.service';\nimport { Category } from '../../data/category';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.css']\n})\nexport class CreateProductComponent implements OnInit {\n  public productForm: any;\n  public id: number = 0;\n  public imagePathList: string[] = [];\n  public Category: Category[] = [];\n  public application: Applicationtype[] = [];\n  public product: Product | undefined;\n  public productname?: string = \"\";\n  public productlist: Product[] = [];\n  loading: boolean = false;\n  file?: File;\n  isAlert:boolean= false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productServiceService: ProductServiceService,\n    public router: Router,\n    public userserviceService: UserserviceService,\n    private http: HttpClient // Inject HttpClient module here\n  ) {\n    if (!userserviceService.getuserloginstatus() && !userserviceService.isadmin) {\n      router.navigate(['/Login']);\n    }\n    this.productlist = productServiceService.getProduct();\n    this.Category = productServiceService.getcategory();\n    this.application = productServiceService.getapplication();\n  }\n  \n\n  ngOnInit(): void {\n    this.productForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: ['', [Validators.required, Validators.min(1), Validators.max(2147483647)]],\n      shortDesc: [''],\n      description: [''],\n      categoryId: ['', Validators.required],\n      applicationTypeId: ['', Validators.required]\n    });\n  }\n\n  onFileChange(event: any) {\n    this.file = event.target.files[0];\n  }\n\n  \n  OnUploadFile() {\n    console.log('upload.....');\n    if (this.file) {\n      const formData = new FormData();\n      formData.append('file', this.file);\n  \n      const headers = new HttpHeaders();\n      headers.append('Content-Type', 'multipart/form-data');\n  \n      this.http\n        .post('assets', formData, { headers })\n        .subscribe(\n          (response: any) => {\n            console.log('File uploaded successfully');\n            // Handle the response if required\n          },\n          (error: any) => {\n            console.error('Error uploading file:', error);\n            // Handle the error if required\n          }\n        );\n    }\n  }\n  \n\n  \n  onSubmit() {\n    if (this.productForm.valid) {\n      const productName = this.productForm.controls['name'].value;\n      const isDuplicate = this.productlist.some(\n        (product) =>\n          product.Name?.toLowerCase() === productName.toLowerCase()\n      );\n      if (isDuplicate) {\n        this.onAlertOpen();\n        setTimeout(()=>{\n          this.onAlertClose();\n        },3000)\n      } else {\n        this.OnUploadFile(); // Upload the file before adding the product\n        const product = new Product(\n          this.id,\n          productName,\n          this.productForm.controls['shortDesc'].value,\n          this.productForm.controls['price'].value,\n          this.imagePathList[0],\n          this.productForm.controls['categoryId'].value,\n          this.productForm.controls['applicationTypeId'].value,\n          this.productForm.controls['description'].value\n        );\n  \n        this.productServiceService.Addproduct(product);\n        console.log(this.productServiceService.getProduct());\n        this.router.navigate(['/displayproductlist']);\n      }\n    }\n  }\n  onAlertClose(){\n    this.isAlert=false;\n  }\n  onAlertOpen(){\n    this.isAlert=true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}