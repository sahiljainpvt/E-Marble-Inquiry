{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/data/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/userservices.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Invalid email format \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, RegisterComponent_div_19_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, RegisterComponent_div_19_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registerForm.controls[\"email\"].errors == null ? null : ctx_r1.registerForm.controls[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registerForm.controls[\"email\"].errors == null ? null : ctx_r1.registerForm.controls[\"email\"].errors[\"email\"]);\n  }\n}\nfunction RegisterComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Phone Number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Confirm Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(dataservice, router) {\n    this.dataservice = dataservice;\n    this.router = router;\n    this.registerForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      phone: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      confirmPassword: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    const name = this.registerForm.get('name')?.value ?? '';\n    const email = this.registerForm.get('email')?.value ?? '';\n    const phone = this.registerForm.get('phone')?.value ?? '';\n    const password = this.registerForm.get('password')?.value ?? '';\n    const confirmPassword = this.registerForm.get('confirmPassword')?.value ?? '';\n    this.newUser = new User(0, name, email, phone, password, false);\n    console.log(this.registerForm.value);\n    this.dataservice.addUser(this.newUser);\n    this.router.navigate(['/Login']);\n    console.log(this.dataservice.getUData());\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UserserviceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 43,\n  vars: 8,\n  consts: [[\"rel\", \"stylesheet\", \"href\", \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.0.1/css/bootstrap.min.css\"], [1, \"container\", \"mt-0\"], [1, \"row\", \"justify-content-center\", \"login-container\"], [1, \"register-title\", \"text-center\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"tel\", \"id\", \"phone\", \"formControlName\", \"phone\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"required\", \"\", 1, \"form-control\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-register\", \"mt-4\", 3, \"disabled\"], [1, \"text-center\"], [3, \"routerLink\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"Register Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"link\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"h1\", 3);\n      i0.ɵɵtext(8, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 7);\n      i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\", 9);\n      i0.ɵɵtext(17, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 10);\n      i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 3, 2, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 11);\n      i0.ɵɵtext(22, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 12);\n      i0.ɵɵtemplate(24, RegisterComponent_div_24_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\", 13);\n      i0.ɵɵtext(27, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 14);\n      i0.ɵɵtemplate(29, RegisterComponent_div_29_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 5)(31, \"label\", 15);\n      i0.ɵɵtext(32, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 16);\n      i0.ɵɵtemplate(34, RegisterComponent_div_34_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 17)(36, \"button\", 18);\n      i0.ɵɵtext(37, \" Register \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(38, \"br\");\n      i0.ɵɵelementStart(39, \"div\", 19);\n      i0.ɵɵtext(40, \" Already have an account?\");\n      i0.ɵɵelementStart(41, \"a\", 20);\n      i0.ɵɵtext(42, \" Sign in\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"name\"].invalid && ctx.registerForm.controls[\"name\"].touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"email\"].invalid && ctx.registerForm.controls[\"email\"].touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"phone\"].invalid && ctx.registerForm.controls[\"phone\"].touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"password\"].invalid && ctx.registerForm.controls[\"password\"].touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"confirmPassword\"].invalid && ctx.registerForm.controls[\"confirmPassword\"].touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"routerLink\", \"/Login\");\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"body[_ngcontent-%COMP%] {\\n        background-color: #f8f9fa;\\n      }\\n\\n      .login-container[_ngcontent-%COMP%] {\\n        max-width: 900px;\\n        margin: auto;\\n        margin-top: 100px;\\n        background-color: #fff;\\n        padding: 20px;\\n        border-radius: 10px;\\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n      }\\n\\n      .register-title[_ngcontent-%COMP%] {\\n        font-size: 24px;\\n        font-weight: bold;\\n        text-align: center;\\n        color: #333;\\n        margin-bottom: 30px;\\n      }\\n\\n      .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n        color: #333;\\n        font-weight: bold;\\n      }\\n\\n      .form-control[_ngcontent-%COMP%] {\\n        border: none;\\n        border-radius: 5px;\\n        background-color: #f5f5f5;\\n        padding: 12px;\\n        color: #333;\\n      }\\n\\n      .form-control[_ngcontent-%COMP%]:focus {\\n        outline: none;\\n        box-shadow: none;\\n        background-color: #ebebeb;\\n      }\\n\\n      .btn-register[_ngcontent-%COMP%] {\\n        background-color: #17a2b8;;\\n        color: #fff;\\n        border-radius: 5px;\\n        padding: 12px;\\n        font-weight: bold;\\n        text-transform: uppercase;\\n        letter-spacing: 1px;\\n        width: 100%;\\n        transition: background-color 0.3s;\\n      }\\n\\n      .btn-login[_ngcontent-%COMP%]:hover {\\n        background-color: #138496;\\n      }\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,IAAI,QAAQ,mBAAmB;;;;;;;;ICgF9BC,+BAMC;IACCA,kCACF;IAAAA,iBAAM;;;;;IAmBJA,2BAAiE;IAC/DA,mCACF;IAAAA,iBAAM;;;;;IACNA,2BAA8D;IAC5DA,sCACF;IAAAA,iBAAM;;;;;IAZRA,+BAMC;IACCA,0EAEM;IACNA,0EAEM;IACRA,iBAAM;;;;IANEA,eAAyD;IAAzDA,6IAAyD;IAGzDA,eAAsD;IAAtDA,0IAAsD;;;;;IAe9DA,+BAMC;IACCA,0CACF;IAAAA,iBAAM;;;;;IAYNA,+BAMC;IACCA,sCACF;IAAAA,iBAAM;;;;;IAcNA,+BAMC;IACCA,8CACF;IAAAA,iBAAM;;;ADtKhB,OAAM,MAAOC,iBAAiB;EAG5BC,YAAmBC,WAA+B,EAAQC,MAAa;IAApD,gBAAW,GAAXD,WAAW;IAA4B,WAAM,GAANC,MAAM;IAEhE,iBAAY,GAAG,IAAIP,SAAS,CAAC;MAC3BQ,IAAI,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ,CAAC;MAC9CC,KAAK,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC,CAAC;MACnEC,KAAK,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ,CAAC;MAC/CG,QAAQ,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ,CAAC;MAClDI,eAAe,EAAE,IAAId,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ;KACzD,CAAC;EARwE;EAU1EK,QAAQ;IACN,MAAMN,IAAI,GAAW,IAAI,CAACO,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAK,IAAI,EAAE;IAC/D,MAAMP,KAAK,GAAW,IAAI,CAACK,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,IAAI,EAAE;IACjE,MAAMN,KAAK,GAAW,IAAI,CAACI,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,IAAI,EAAE;IACjE,MAAML,QAAQ,GAAW,IAAI,CAACG,YAAY,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK,IAAI,EAAE;IACvE,MAAMJ,eAAe,GAAW,IAAI,CAACE,YAAY,CAACC,GAAG,CAAC,iBAAiB,CAAC,EAAEC,KAAK,IAAI,EAAE;IAErF,IAAI,CAACC,OAAO,GAAG,IAAIhB,IAAI,CAAC,CAAC,EAACM,IAAI,EAAEE,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAC,KAAK,CAAC;IAC7DO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,YAAY,CAACE,KAAK,CAAC;IACpC,IAAI,CAACX,WAAW,CAACe,OAAO,CAAC,IAAI,CAACH,OAAO,CAAC;IACtC,IAAI,CAACX,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChCH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,WAAW,CAACiB,QAAQ,EAAE,CAAC;EAC1C;;AAzBWnB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV9BzB,4BAAM;MAEKA,6BAAa;MAAAA,iBAAQ;MAE5BA,0BAGE;MA4DJA,iBAAO;MACTA,8BAA4B;MAEsBA,wBAAQ;MAAAA,iBAAK;MACzDA,+BAAyD;MAAxBA;QAAA,OAAY0B,cAAU;MAAA,EAAC;MACtD1B,+BAA6B;MACUA,sBAAK;MAAAA,iBAAQ;MAClDA,4BAME;MACFA,oEAQM;MACRA,iBAAM;MAENA,+BAA6B;MACWA,uBAAM;MAAAA,iBAAQ;MACpDA,6BAME;MACFA,oEAaM;MACRA,iBAAM;MAENA,+BAA6B;MACWA,8BAAa;MAAAA,iBAAQ;MAC3DA,6BAME;MACFA,oEAQM;MACRA,iBAAM;MAENA,+BAA6B;MACcA,0BAAS;MAAAA,iBAAQ;MAC1DA,6BAME;MACFA,oEAQM;MACRA,iBAAM;MAENA,+BAA6B;MAExBA,kCAAiB;MAAAA,iBACnB;MACDA,6BAME;MACFA,oEAQM;MACRA,iBAAM;MAENA,gCAAoB;MAMhBA,2BACF;MAAAA,iBAAS;MAEXA,sBAAI;MACJA,gCAAyB;MACvBA,0CAAwB;MAAAA,8BAA2B;MAACA,yBAAO;MAAAA,iBAAI;;;MAvH7DA,eAA0B;MAA1BA,4CAA0B;MAWzBA,eAIb;MAJaA,6GAIb;MAgBaA,eAIb;MAJaA,+GAIb;MAqBaA,eAIb;MAJaA,+GAIb;MAgBaA,eAIb;MAJaA,qHAIb;MAkBaA,eAIb;MAJaA,mIAIb;MAUYA,eAAiC;MAAjCA,mDAAiC;MAORA,eAAuB;MAAvBA,qCAAuB","names":["FormControl","FormGroup","Validators","User","i0","RegisterComponent","constructor","dataservice","router","name","required","email","phone","password","confirmPassword","onSubmit","registerForm","get","value","newUser","console","log","addUser","navigate","getUData","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\authentication\\register\\register.component.ts","C:\\Users\\158590\\OneDrive - Arrow Electronics, Inc\\Desktop\\E-Marble_Inquiry\\src\\app\\authentication\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/data/user';\nimport { UserserviceService } from 'src/app/Services/userservices.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  newUser: any;\n\n  constructor(public dataservice: UserserviceService,public router:Router) {}\n\n  registerForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    phone: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n    confirmPassword: new FormControl('', Validators.required)\n  });\n  \n  onSubmit() {\n    const name: string = this.registerForm.get('name')?.value ?? '';\n    const email: string = this.registerForm.get('email')?.value ?? '';\n    const phone: string = this.registerForm.get('phone')?.value ?? '';\n    const password: string = this.registerForm.get('password')?.value ?? '';\n    const confirmPassword: string = this.registerForm.get('confirmPassword')?.value ?? '';\n\n    this.newUser = new User(0,name, email, phone, password,false);\n    console.log(this.registerForm.value);\n    this.dataservice.addUser(this.newUser);\n    this.router.navigate(['/Login']);\n    console.log(this.dataservice.getUData());\n  }\n}\n","<!DOCTYPE html>\n<html>\n  <head>\n    <title>Register Form</title>\n    <!-- Bootstrap CSS -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.0.1/css/bootstrap.min.css\"\n    />\n    <style>\n      /* Custom styles */\n      body {\n        background-color: #f8f9fa;\n      }\n\n      .login-container {\n        max-width: 900px;\n        margin: auto;\n        margin-top: 100px;\n        background-color: #fff;\n        padding: 20px;\n        border-radius: 10px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n      }\n\n      .register-title {\n        font-size: 24px;\n        font-weight: bold;\n        text-align: center;\n        color: #333;\n        margin-bottom: 30px;\n      }\n\n      .form-group label {\n        color: #333;\n        font-weight: bold;\n      }\n\n      .form-control {\n        border: none;\n        border-radius: 5px;\n        background-color: #f5f5f5;\n        padding: 12px;\n        color: #333;\n      }\n\n      .form-control:focus {\n        outline: none;\n        box-shadow: none;\n        background-color: #ebebeb;\n      }\n\n      .btn-register {\n        background-color: #17a2b8;;\n        color: #fff;\n        border-radius: 5px;\n        padding: 12px;\n        font-weight: bold;\n        text-transform: uppercase;\n        letter-spacing: 1px;\n        width: 100%;\n        transition: background-color 0.3s;\n      }\n\n      .btn-login:hover {\n        background-color: #138496;\n      }\n    </style>\n  </head>\n<div class=\"container mt-0\">\n    <div class=\"row justify-content-center login-container\">\n      <h1 class=\"register-title text-center mb-4\">Register</h1>\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group mb-3\">\n          <label for=\"name\" class=\"form-label\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            formControlName=\"name\"\n            class=\"form-control\"\n            required\n          />\n          <div\n            *ngIf=\"\n              registerForm.controls['name'].invalid &&\n              registerForm.controls['name'].touched\n            \"\n            class=\"text-danger\"\n          >\n            Name is required\n          </div>\n        </div>\n  \n        <div class=\"form-group mb-3\">\n          <label for=\"email\" class=\"form-label\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            formControlName=\"email\"\n            class=\"form-control\"\n            required\n          />\n          <div\n            *ngIf=\"\n              registerForm.controls['email'].invalid &&\n              registerForm.controls['email'].touched\n            \"\n            class=\"text-danger\"\n          >\n            <div *ngIf=\"registerForm.controls['email'].errors?.['required']\">\n              Email is required\n            </div>\n            <div *ngIf=\"registerForm.controls['email'].errors?.['email']\">\n              Invalid email format\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"form-group mb-3\">\n          <label for=\"phone\" class=\"form-label\">Phone Number:</label>\n          <input\n            type=\"tel\"\n            id=\"phone\"\n            formControlName=\"phone\"\n            class=\"form-control\"\n            required\n          />\n          <div\n            *ngIf=\"\n              registerForm.controls['phone'].invalid &&\n              registerForm.controls['phone'].touched\n            \"\n            class=\"text-danger\"\n          >\n            Phone Number is required\n          </div>\n        </div>\n  \n        <div class=\"form-group mb-3\">\n          <label for=\"password\" class=\"form-label\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            formControlName=\"password\"\n            class=\"form-control\"\n            required\n          />\n          <div\n            *ngIf=\"\n              registerForm.controls['password'].invalid &&\n              registerForm.controls['password'].touched\n            \"\n            class=\"text-danger\"\n          >\n            Password is required\n          </div>\n        </div>\n  \n        <div class=\"form-group mb-3\">\n          <label for=\"confirmPassword\" class=\"form-label\"\n            >Confirm Password:</label\n          >\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            formControlName=\"confirmPassword\"\n            class=\"form-control\"\n            required\n          />\n          <div\n            *ngIf=\"\n              registerForm.controls['confirmPassword'].invalid &&\n              registerForm.controls['confirmPassword'].touched\n            \"\n            class=\"text-danger\"\n          >\n            Confirm Password is required\n          </div>\n        </div>\n  \n        <div class=\"d-grid\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-register mt-4\"\n            [disabled]=\"registerForm.invalid\"\n          >\n            Register\n          </button>\n        </div>\n        <br>\n        <div class=\"text-center\">\n          Already have an account?<a [routerLink]=\"'/Login'\"> Sign in</a>\n        </div>\n      </form>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}